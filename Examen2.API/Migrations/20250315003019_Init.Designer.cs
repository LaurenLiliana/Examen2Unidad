// <auto-generated />
using System;
using Examen2.API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examen2.API.Migrations
{
    [DbContext(typeof(SistemaPagosDbContext))]
    [Migration("20250315003019_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("Examen2.API.Database.Entities.DetallePlanillaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<decimal>("Bonificaciones")
                        .HasColumnType("TEXT")
                        .HasColumnName("bonificaciones");

                    b.Property<string>("Comentarios")
                        .HasColumnType("TEXT")
                        .HasColumnName("comentarios");

                    b.Property<decimal>("Deducciones")
                        .HasColumnType("TEXT")
                        .HasColumnName("deducciones");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("empleado_id");

                    b.Property<decimal>("HorasExtra")
                        .HasColumnType("TEXT")
                        .HasColumnName("horas_extra");

                    b.Property<decimal>("MontoHorasExtra")
                        .HasColumnType("TEXT")
                        .HasColumnName("montos_horas_extra");

                    b.Property<int?>("PlanillaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlantillaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("plantilla_id");

                    b.Property<decimal>("SalarioBase")
                        .HasColumnType("TEXT")
                        .HasColumnName("salario_base");

                    b.Property<decimal>("SalarioNeto")
                        .HasColumnType("TEXT")
                        .HasColumnName("salario_neto");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("PlanillaId");

                    b.ToTable("DetallePlantillas");
                });

            modelBuilder.Entity("Examen2.API.Database.Entities.EmpleadoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER")
                        .HasColumnName("activo");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("apellido");

                    b.Property<string>("Departamento")
                        .HasColumnType("TEXT")
                        .HasColumnName("departamento");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("documento");

                    b.Property<DateTime>("FechaContratacion")
                        .HasColumnType("TEXT")
                        .HasColumnName("fecha_contratacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("PuestoTrabajo")
                        .HasColumnType("TEXT")
                        .HasColumnName("puesto_trabajo");

                    b.Property<decimal>("SalarioBase")
                        .HasColumnType("TEXT")
                        .HasColumnName("salario_base");

                    b.HasKey("Id");

                    b.ToTable("empleados");
                });

            modelBuilder.Entity("Examen2.API.Database.Entities.PlanillaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Estado")
                        .HasColumnType("TEXT")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("TEXT")
                        .HasColumnName("fecha_pago");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("periodo");

                    b.HasKey("Id");

                    b.ToTable("Planillas");
                });

            modelBuilder.Entity("Examen2.API.Database.Entities.DetallePlanillaEntity", b =>
                {
                    b.HasOne("Examen2.API.Database.Entities.EmpleadoEntity", "Empleado")
                        .WithMany("DetallesPlanilla")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examen2.API.Database.Entities.PlanillaEntity", "Planilla")
                        .WithMany("DetallesPlanilla")
                        .HasForeignKey("PlanillaId");

                    b.Navigation("Empleado");

                    b.Navigation("Planilla");
                });

            modelBuilder.Entity("Examen2.API.Database.Entities.EmpleadoEntity", b =>
                {
                    b.Navigation("DetallesPlanilla");
                });

            modelBuilder.Entity("Examen2.API.Database.Entities.PlanillaEntity", b =>
                {
                    b.Navigation("DetallesPlanilla");
                });
#pragma warning restore 612, 618
        }
    }
}
